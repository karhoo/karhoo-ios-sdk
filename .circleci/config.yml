# Network SDK .circleci/config.yml
version: 2.1
jobs:
  build-and-test:
    macos:
      xcode: 13.4.1
    working_directory: /Users/distiller/project/KarhooSDK.xcodeproj
    environment:
      FL_OUTPUT_DIR: output
      FASTLANE_LANE: unit_tests_integration_tests
    shell: /bin/bash --login -eo pipefail
    resource_class: medium
    steps:
      - checkout
      - run: sudo defaults write com.apple.dt.Xcode IDEPackageSupportUseBuiltinSCM YES
      - run: for ip in $(dig @8.8.8.8 bitbucket.org +short); do ssh-keyscan bitbucket.org,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts || true 
      - run: for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts || true
      - run:
          name: Set Ruby Version
          command: |
           echo 'chruby ruby-2.7.2' >> ~/.bash_profile
           bundle install
           gem install bundler:2.2.15
      - restore_cache:
          name: Restore cache - Load installed gems from cache if possible -
          keys:
            - gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-v1-{{ arch }}-{{ .Branch }}
            - gem-cache-v1
      - run:
          name: Install Gemfile for Fastlane
          command: |
           bundle config set --local path 'vendor/bundle'
           bundle check || bundle install
      - save_cache:
          name: Save cache - Save installed gems from previous step -
          key: gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Update Fastlane
          command: bundle update fastlane
      - run:
          name: Create Keys.swift
          command: |
            echo "import KarhooSDK" > Client/Keys.swift
            echo "struct Keys {" >> Client/Keys.swift
            echo "static let identifier = \"\"" >> Client/Keys.swift
            echo "static let referer = \"\"" >> Client/Keys.swift
            echo "static let organisationId = \"\"}" >> Client/Keys.swift
            echo "struct AdyenSDKConfig: KarhooSDKConfiguration {" >> Client/Keys.swift
            echo "func environment() -> KarhooEnvironment {" >> Client/Keys.swift
            echo "return .custom(environment: .init(host: \"$ADYEN_STG_HOST\", authHost: \"$ADYEN_STG_AUTHHOST\", guestHost: \"$ADYEN_STG_GUESTHOST\")) }" >> Client/Keys.swift
            echo "func authenticationMethod() -> AuthenticationMethod {" >> Client/Keys.swift
            echo "return .karhooUser }}" >> Client/Keys.swift
      - run:
          name: fastlane
          command: |
            bundle exec fastlane $FASTLANE_LANE
      - run:
          name: Fastlane Xcov report
          command: bundle exec fastlane ios XcovReport
      - store_artifacts:
          path: output
      - store_test_results:
          path: output/scan

  adhoc:
    macos:
      xcode: 13.4.1
    environment:
      FL_OUTPUT_DIR: output
      FASTLANE_LANE: adhoc
    steps:
      - checkout
      - run: bundle install
      - run:
          name: Fastlane
          command: bundle exec fastlane $FASTLANE_LANE
      - store_artifacts:
          path: output

workflows:
  build-test-adhoc:
    jobs:
      - build-and-test
      - adhoc:
          filters:
            branches:
              only: development
          requires:
            - build-and-test
